
/*******************************************************************************
 * Name    : sqrt.cpp
 * Author  : Eric Stazzone
 * Version : 1.0
 * Date    : September 2nd, 2020
 * Description : Computes the square root of a number.
 * Pledge : I pledge my honor that I have abided by the Stevens Honor System.
 ******************************************************************************/
#include <iomanip>
#include <iostream>
#include <limits>
#include <sstream>

using namespace std;

double sqrt(double num, double epsilon){
	if (num < 0){
		return numeric_limits<double>::quiet_NaN();
	}

	if ((num == 0) || (num == 1)){
		return num;
	}

	if (epsilon == 0){
		epsilon = .0000001;
	}

	double last_guess, next_guess;
	last_guess = num;
	next_guess = (last_guess + num/last_guess)/2;
	while (abs(last_guess-next_guess) > epsilon){
		last_guess = next_guess;
		next_guess = (last_guess + num/last_guess)/2;
	}
	return next_guess;
}

int main (int argc, char *argv[]){
	double n,e;
	istringstream iss;

	if (!(argc==2 || argc==3)){
		cerr << "Usage: " << argv[0] << " <value> [epsilon]" << endl;
		return 1;
	}

	iss.str(argv[1]);
	if (!(iss >> n)){
		cerr << "Error: Value argument must be a double." << endl;
		return 1;
	}

	if (argc==3){
		iss.clear();
		iss.str(argv[2]);
		if ((!(iss >> e)) || (e<=0)){
			cerr << "Error: Epsilon argument must be a positive double." << endl;
			return 1;
		}
	}
	cout << fixed << setprecision(8) << sqrt(n,e) << endl;
	return 0;
}
